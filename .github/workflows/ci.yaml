name: Continuous integration
on:
  push:
    branches-ignore:
      - "main"
  pull_request:

jobs:
  format-code:
    name: Check code format
    runs-on: ubuntu-latest
    container: python:3.12-slim
    steps:
      - name: Install required packages
        run: |
          apt update
          apt -y install python3-poetry libpq-dev
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Create virtual environment
        run: |
          poetry env use python3.12
          poetry install
      - name: Check code format
        shell: bash
        run: |
          source $(poetry env info --path)/bin/activate
          python -m black --check todo_app/
  format-import:
    name: Check imports format
    runs-on: ubuntu-latest
    container: python:3.12-slim
    steps:
      - name: Install required packages
        run: |
          apt update
          apt -y install python3-poetry libpq-dev
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Create virtual environment
        run: |
          poetry env use python3.12
          poetry install
      - name: Check code import format
        shell: bash
        run: |
          source $(poetry env info --path)/bin/activate
          python -m isort --check-only todo_app/
  lint-typing:
    name: Check static typing
    runs-on: ubuntu-latest
    container: python:3.12-slim
    steps:
      - name: Install required packages
        run: |
          apt update
          apt -y install python3-poetry libpq-dev
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Create virtual environment
        run: |
          poetry env use python3.12
          poetry install
      - name: Check code static typing
        shell: bash
        run: |
          source $(poetry env info --path)/bin/activate
          python -m mypy todo_app/
